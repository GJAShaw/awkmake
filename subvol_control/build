== ------------------------------------------------------------------
== file: build
== type: TACL for Guardian software build using GNU Make
== project: awkmake
== ------------------------------------------------------------------

== ------------------------------------------------------------------
== subvol_ STRUCT
== ------------------------------------------------------------------
[#DEF :subvol_ STRUCT
  BEGIN
    SUBVOL control  VALUE $DEV1.GSCTRL;
    SUBVOL tmp      VALUE $STAT.GSTMP;
    SUBVOL gstalsrc VALUE $STAT.GSTALSRC;
  END;
]


== ------------------------------------------------------------------
== defines and directives
== ------------------------------------------------------------------

== :add_defines MACRO
== Doesn't really need to be a macro; if we're going to OBEY this
== file, then we could just have the bare commands. The advantage of
== placing the commands in a macro is that the command to add the
== defines becomes an explicit one within the build, rather than
== being hidden among the TACL variable definitions.
[#DEF :add_defines MACRO |BODY|

  == targets and their build log locations
  DELETE DEFINE =gs100exe_hello
  ADD DEFINE    =gs100exe_hello, FILE $STAT.GS100EXE.HELLO
  DELETE DEFINE =gs100exe_hello_log
  ADD DEFINE    =gs100exe_hello_log, FILE $S.#HELLO.OCAX
  DELETE DEFINE =gs100obj_hello
  add define    =gs100obj_hello, FILE $STAT.GS100OBJ.HELLO
  DELETE DEFINE =gs100obj_hello_log
  ADD DEFINE    =gs100obj_hello_log, FILE $S.#HELLO.TAL
  DELETE DEFINE =gstalsrc_hello
  ADD DEFINE    =gstalsrc_hello, FILE $STAT.GSTALSRC.HELLO
  DELETE DEFINE =gstalsrc_hello_log
  ADD DEFINE    =gstalsrc_hello_log, FILE $S.#HELLO.CTOEDIT

  == build tools (leading _ in define name is not mandatory)
  DELETE DEFINE =_tal
  ADD DEFINE    =_tal, FILE $SYSTEM.SYSTEM.TAL
  DELETE DEFINE =_ocax
  ADD DEFINE    =_ocax, FILE $SYSTEM.SYSTEM.OCAX
  DELETE DEFINE =_ctoedit
  ADD DEFINE    =_ctoedit, FILE $SYSTEM.SYSTEM.CTOEDIT

  == subvolumes to hold intermediate source files with code 180
  DELETE DEFINE =tacl_tmp_svol
  ADD DEFINE    =tacl_tmp_svol, FILE $DEV1.GSTCTMP
  DELETE DEFINE =tal_tmp_svol
  ADD DEFINE    =tal_tmp_svol, FILE $DEV1.GSTLTMP
  
]

== :tal_directives TEXT
[#DEF :tal_directives TEXT |BODY|OPTIMIZE 0]


== ------------------------------------------------------------------
== gs100obj_hello target
== ------------------------------------------------------------------

[#DEF :gs100obj_hello_dependencies TEXT |BODY|
  $(gs100obj_hello): $(gstalsrc_hello)
  $(_tal)
]

[#DEF :gs100obj_hello_recipe MACRO |BODY|
  RUN =_tal/IN =gstalsrc_hello, OUT =gs100obj_hello_log, TERM $ZHOME/ &
    =gs100obj_hello; [:tal_directives]
]

== ------------------------------------------------------------------
== gs100exe_hello target
== ------------------------------------------------------------------

[#DEF :gs100exe_hello_dependencies TEXT |BODY|
  $(gs100exe_hello): $(gs100obj_hello)
  $(_ocax)
]

[#DEF :gs100exe_hello_recipe MACRO |BODY|
  RUN =_ocax/OUT =gs100exe_hello_log, TERM $ZHOME/ =gs100obj_hello &
    output_file =gs100exe_hello
]

== ------------------------------------------------------------------
== commented_out target
== ------------------------------------------------------------------

==[#DEF :commented_out_dependencies TEXT |BODY|
==  $(commented_out): $(commented_out_deps)
==]

==[#DEF :commented_out_recipe MACRO |BODY|
==  RUN =_ocax/OUT =ocax_out, TERM $ZHOME/ =gs100obj_hello &
==    -output_file =gs100exe_hello
==]

== ------------------------------------------------------------------
== EOF
== ------------------------------------------------------------------

