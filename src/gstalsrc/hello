! --------------------------------------------------------------------
! file: hello
! type: TAL source
! project: awkmake
! purpose: "Hello, world!" in TAL
! --------------------------------------------------------------------

! --------------------------------------------------------------------
! Debug control
! --------------------------------------------------------------------
?SYMBOLS
?IFNOT PTAL
?  INSPECT
?ENDIF

! --------------------------------------------------------------------
! Other source
! --------------------------------------------------------------------
?NOLIST, NOMAP
?IFNOT PTAL
?  NOCODE
?ENDIF

?SOURCE =EXTDECS1(
?  FILE_CLOSE_,
?  FILE_GETINFO_,
?  FILE_OPEN_,
?  INITIALIZER,
?  PROCESS_DEBUG_,
?  PROCESS_GETINFO_,
?  PROCESS_STOP_,
?  WRITE
?)

?SOURCE =ZSYSTAL(FILENAME^CONSTANT)

?LIST, MAP
?IFNOT PTAL
?  CODE
?ENDIF

! --------------------------------------------------------------------
! PROC hello^MAIN MAIN
! --------------------------------------------------------------------
PROC hello^MAIN MAIN;
BEGIN
  ! declare variables
  INT rc := 0; ! generic response code
  STRING .EXT hometerm^string[0:ZSYS^VAL^LEN^FILENAME - 1];
  INT hometerm^length^bytes := 0;
  INT filenum := -2; ! intialise to a value never returned by FILE_OPEN_
  LITERAL outbuf^length^bytes = 1028;
  STRING . out^buffer[0: outbuf^length^bytes - 1];
  INT . pint^outbuf; ! INT pointer to hold word address of out^buffer
  STRING . ptr^string; ! pointer to find end of output message
  INT output^bytes := 0;
  INT .EXT file^error;
  file^error := 0;
  
  ! Throw away startup message from the process which called this program
  INITIALIZER;
  
  ! Find out what our home terminal name is. No error-handling, as we should
  ! always be able to get information about ourselves
  rc := PROCESS_GETINFO_( ! processhandle !
                        , ! proc-fname: maxlen !
                        , ! proc-fname-len !
                        , ! priority !
                        , ! mom's-processhandle !
                        , hometerm^string:ZSYS^VAL^LEN^FILENAME
                        , hometerm^length^bytes
                        );
  
  ! Try to open the home terminal for read/write input and output
  rc := FILE_OPEN_(hometerm^string:hometerm^length^bytes, filenum);
  IF (filenum = -1) THEN ! open attempt failed
    BEGIN
      PROCESS_DEBUG_;
      PROCESS_STOP_;
    END;
  
  ! Put the message into the output buffer, and work out how long it is
  out^buffer ':=' "Hello, world!" -> @ptr^string;
  output^bytes := @ptr^string '-' @out^buffer;
  
  ! Get word address of out^buffer and place it in pint^outbuf, because
  ! WRITE proc needs an INT array argument, not a STRING array
  @pint^outbuf := @out^buffer '>>' 1; 
  
  ! Write contents of output buffer to terminal screen
  CALL WRITE(filenum, pint^outbuf, output^bytes);
  IF <> THEN ! write failed
    BEGIN
      rc := FILE_GETINFO_(filenum, @file^error);
      PROCESS_DEBUG_;
      PROCESS_STOP_;
    END;
  
  ! Close terminal. Ignore errors - we are about to shut down anyway
  rc := FILE_CLOSE_(filenum);
  
END;

! --------------------------------------------------------------------
! EOF
! --------------------------------------------------------------------

